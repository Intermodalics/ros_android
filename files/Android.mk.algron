LOCAL_PATH := $(call my-dir)

# These must go in some sort of order like include flags, otherwise they are dropped
# Oh no, need to automate this with catkin somehow....
stlibs :=  topic_tools roscpp boost_signals boost_filesystem rosconsole rosconsole_print rosconsole_backend_interface boost_regex roscpp_serialization boost_date_time boost_system boost_thread xmlrpcpp cpp_common console_bridge move_base dynamic_reconfigure_config_init_mutex global_planner navfn costmap_2d ardrone_sdk ardrone_driver rostime pc_ardrone avcodec swscale avutil vlib sdk image_transport camera_info_manager roslib rospack tinyxml class_loader PocoFoundation nav_to_odom pose_viz utm_transform tf tf2_ros actionlib message_filters tf2 straight_line_planner camera_calibration_parsers boost_program_options yaml-cpp utm_odometry ros_filter filter_base ekf base_local_planner altitude_controller

#shlibs := 

define include_shlib
$(eval include $$(CLEAR_VARS))
$(eval LOCAL_MODULE := $(1))
$(eval LOCAL_SRC_FILES := $$(LOCAL_PATH)/lib/lib$(1).so)
$(eval include $$(PREBUILT_SHARED_LIBRARY))
endef
define include_stlib
$(eval include $$(CLEAR_VARS))
$(eval LOCAL_MODULE := $(1))
$(eval LOCAL_SRC_FILES := $$(LOCAL_PATH)/lib/lib$(1).a)
$(eval include $$(PREBUILT_STATIC_LIBRARY))
endef

#$(foreach shlib,$(shlibs),$(eval $(call include_shlib,$(shlib))))
$(foreach stlib,$(stlibs),$(eval $(call include_stlib,$(stlib))))

include $(CLEAR_VARS)
LOCAL_MODULE    := roscpp_android_ndk
LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)/include
LOCAL_EXPORT_C_INCLUDES += $(LOCAL_PATH)/include/ardrone
LOCAL_EXPORT_C_INCLUDES += $(LOCAL_PATH)/include/ardrone/Common
LOCAL_EXPORT_C_INCLUDES += $(LOCAL_PATH)/include/ardrone/VP_SDK
LOCAL_EXPORT_C_INCLUDES += $(LOCAL_PATH)/include/ardrone/linux
LOCAL_EXPORT_C_INCLUDES += $(LOCAL_PATH)/include/ardrone/Lib
LOCAL_EXPORT_C_INCLUDES += $(LOCAL_PATH)/include/ardrone/FFMPEG/Includes
LOCAL_EXPORT_CPPFLAGS := -fexceptions -frtti

# Uncomment to enable debug build
LOCAL_EXPORT_CFLAGS += -g

#LOCAL_SRC_FILES := dummy.cpp
#LOCAL_EXPORT_LDLIBS := $(foreach l,$(shlibs),-l$(l)) -L$(LOCAL_PATH)/lib
#LOCAL_EXPORT_LDLIBS := -lstdc++ #-L$(LOCAL_PATH)/lib
#LOCAL_SHARED_LIBRARIES := $(shlibs)
LOCAL_STATIC_LIBRARIES := $(stlibs) gnustl_static

include $(BUILD_STATIC_LIBRARY)
