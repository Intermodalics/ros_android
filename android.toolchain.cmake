
if(ANDROID_NDK_TOOLCHAIN_INCLUDED)
  return()
endif(ANDROID_NDK_TOOLCHAIN_INCLUDED)
include($ENV{ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake)

# Debug and release flags.
list(REMOVE_ITEM ANDROID_COMPILER_FLAGS -g)
list(APPEND ANDROID_COMPILER_FLAGS_DEBUG -g)
list(APPEND ANDROID_COMPILER_FLAGS_RELWITHDEBINFO -g ${ANDROID_COMPILER_FLAGS_RELEASE})

if(ANDROID_TOOLCHAIN STREQUAL clang)
  list(APPEND ANDROID_COMPILER_FLAGS_RELWITHDEBINFO -fno-limit-debug-info)
endif()

# Toolchain ABI specific flags.
string(REPLACE ";" " " ANDROID_COMPILER_FLAGS_RELWITHDEBINFO "${ANDROID_COMPILER_FLAGS_RELWITHDEBINFO}")
set(CMAKE_C_FLAGS_RELWITHDEBINFO ""
  CACHE STRING "Flags used by the compiler during relwithdebinfo builds.")
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO ""
  CACHE STRING "Flags used by the compiler during relwithdebinfo builds.")
set(CMAKE_ASM_FLAGS_RELWITHDEBINFO ""
  CACHE STRING "Flags used by the compiler during relwithdebinfo builds.")

set(CMAKE_C_FLAGS_RELWITHDEBINFO   "${ANDROID_COMPILER_FLAGS_RELWITHDEBINFO} ${CMAKE_C_FLAGS_RELWITHDEBINFO}")
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${ANDROID_COMPILER_FLAGS_RELWITHDEBINFO} ${CMAKE_CXX_FLAGS_RELWITHDEBINFO}")
set(CMAKE_ASM_FLAGS_RELWITHDEBINFO "${ANDROID_COMPILER_FLAGS_RELWITHDEBINFO} ${CMAKE_ASM_FLAGS_RELWITHDEBINFO}")
